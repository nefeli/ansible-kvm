---
- name: config_vms | Defining VM(s)
  virt:
    name: "{{ item['name'] }}"
    command: define
    xml: "{{ lookup('template', 'vm-template.xml.j2') }}"
  become: true
  with_items: "{{ kvm_vms }}"
  when: >
    item['host']|default(inventory_hostname) == inventory_hostname

- name: config_vms | Creating VM Disk(s), defined host, empty disk
  qemu_img:
    dest: "{{ kvm_images_path }}/{{ item[1]['name'] }}.{{ kvm_images_format_type }}"
    size: "{{ item[1]['size'] }}"
    format: "{{ kvm_images_format_type }}"
  become: true
  with_subelements:
    - "{{ kvm_vms }}"
    - disks
  when: >
    item[0]['host']|default(inventory_hostname) == inventory_hostname and
    item[1]['image'] is undefined

- name: config_vms | Creating VM Disk(s), defined host, primed disk, fetch
  copy:
    dest: "{{ kvm_images_path }}/{{ item[1]['name'] }}.{{ kvm_images_format_type }}"
    src: "{{ item[1]['image'] }}"
    remote_src: yes
    force: no
  register: new_image
  become: true
  with_subelements:
    - "{{ kvm_vms }}"
    - disks
  when: >
    item[0]['host']|default(inventory_hostname) == inventory_hostname and
    item[1]['image'] is defined

- name: config_vms | Creating VM Disk(s), defined host, primed disk, resize
  qemu_img:
    dest: "{{ kvm_images_path }}/{{ item[1]['name'] }}.{{ kvm_images_format_type }}"
    size: "{{ item[1]['size'] }}"
  become: true
  with_subelements:
    - "{{ kvm_vms }}"
    - disks
  when: >
    item[0]['host']|default(inventory_hostname) == inventory_hostname and
    item[1]['image'] is defined and
    item[1]['size'] is defined and
    new_image.changed

- name: config_vms | Setting VM State
  virt:
    name: "{{ item['name'] }}"
    state: "{{ item['state'] }}"
  become: true
  with_items: "{{ kvm_vms }}"
  when: >
    item['host']|default(inventory_hostname) == inventory_hostname

- name: config_vms | Setting autostart status
  virt:
    name: "{{ item['name'] }}"
    autostart: "{{ item['autostart']|default(omit) }}"
    command: info
  become: true
  with_items: "{{ kvm_vms }}"
  when: >
    item['host']|default(inventory_hostname) == inventory_hostname and
    (ansible_version.full is version_compare('2.3', '>='))
